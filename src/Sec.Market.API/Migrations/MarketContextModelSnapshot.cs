// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sec.Market.API.Data;

#nullable disable

namespace Sec.Market.API.Migrations
{
    [DbContext(typeof(MarketContext))]
    partial class MarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sec.Market.API.Entites.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationDate = "12/25",
                            Number = "6466675889085456",
                            Owner = "John Doe",
                            SecurityCode = "123",
                            Type = "Visa",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Sec.Market.API.Entites.CustomerReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CustomerReviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Produit de très bonne qualitée",
                            CustomerEmail = "jd@test.com",
                            CustomerName = "John Doe",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Je recommande ce produit",
                            CustomerEmail = "ad@test.com",
                            CustomerName = "Anne Doe",
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Sec.Market.API.Entites.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8782),
                            Price = 10m,
                            ProductId = 1,
                            Quantity = 1,
                            ShippingAdress = "23r Rue Paul, Quebec, QC, G2H537",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Sec.Market.API.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8693),
                            Description = "Chandail pour femme, taille M",
                            Image = "image1.png",
                            Name = "Chandail femme",
                            Price = 10
                        },
                        new
                        {
                            Id = 2,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8698),
                            Description = "Polo noir homme, taille L",
                            Image = "image2.png",
                            Name = "Polo Homme noir",
                            Price = 20
                        },
                        new
                        {
                            Id = 3,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8701),
                            Description = "T-shirt noir imprimé homme",
                            Image = "image3.png",
                            Name = "T-shirt imprimé noir",
                            Price = 30
                        },
                        new
                        {
                            Id = 4,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8704),
                            Description = "T-shirt gris femme taille M",
                            Image = "image4.png",
                            Name = "T-shirt gris femme",
                            Price = 15
                        },
                        new
                        {
                            Id = 5,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8707),
                            Description = "T-shirt multicolore femme taille M",
                            Image = "image5.png",
                            Name = "T-shirt multicolore femme",
                            Price = 25
                        },
                        new
                        {
                            Id = 6,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8710),
                            Description = "T-shirt Tee Chemise Homme Treillis Bloc",
                            Image = "image6.png",
                            Name = "T-shirt Tee Chemise Homme Treillis Bloc",
                            Price = 35
                        },
                        new
                        {
                            Id = 7,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8713),
                            Description = "T-shirt blanc imprimé homme",
                            Image = "image7.png",
                            Name = "T-shirt imprimé blanc",
                            Price = 5
                        },
                        new
                        {
                            Id = 8,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8716),
                            Description = "T-shirt Tee Femme Graphic Papillon",
                            Image = "image8.png",
                            Name = "T-shirt Tee Femme Graphic Papillon",
                            Price = 10
                        },
                        new
                        {
                            Id = 9,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8719),
                            Description = "T-shirt Tee Femme Chat Graphic 3D du quotidien",
                            Image = "image9.png",
                            Name = "T-shirt Tee Femme Chat Graphic 3D du quotidien",
                            Price = 20
                        },
                        new
                        {
                            Id = 10,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8722),
                            Description = "T-shirt Tee Homme Estampage à chaud Graphic",
                            Image = "image10.png",
                            Name = "T-shirt Tee Homme Estampage à chaud Graphic",
                            Price = 30
                        },
                        new
                        {
                            Id = 11,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8724),
                            Description = "T-shirt Tee Homme Unisexe Estampage",
                            Image = "image11.png",
                            Name = "T-shirt Tee Homme Unisexe Estampage",
                            Price = 25
                        },
                        new
                        {
                            Id = 12,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8727),
                            Description = "T-shirt en tricot côtelé",
                            Image = "image12.png",
                            Name = "T-shirt en tricot côtelé",
                            Price = 15
                        });
                });

            modelBuilder.Entity("Sec.Market.API.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8436),
                            Email = "jd@test.com",
                            Nom = "John Doe",
                            Password = "123456",
                            Role = "Admin",
                            Token = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            DateCreation = new DateTime(2022, 9, 3, 18, 9, 13, 0, DateTimeKind.Local).AddTicks(8485),
                            Email = "ad@test.com",
                            Nom = "Anne Doe",
                            Password = "123456",
                            Role = "User",
                            Token = "123456789"
                        });
                });

            modelBuilder.Entity("Sec.Market.API.Entites.Card", b =>
                {
                    b.HasOne("Sec.Market.API.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sec.Market.API.Entites.Order", b =>
                {
                    b.HasOne("Sec.Market.API.Entites.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sec.Market.API.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
